head(ds$current_sample())
ds$current_sample()
head(ds$raw_data())
head(ds$raw_sample())
library(LittleApp2)
runApp('inst/F')
head(ds$raw_data())
head(ds$current_sample())
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
head(ds$raw_data())
head(ds$current_sample())
class(ds$current_sample)
head((ds$current_sample)())
traceback()
library(LittleApp2)
runApp('inst/F')
ds$current_sample()
library(LittleApp2)
runApp('inst/F')
head(ds$current_sample())
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
?sample
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
?modal
library(LittleApp2)
runApp('inst/F')
?show_modal
help(package = "shiny")
library(LittleApp2)
runApp('inst/F')
shiny::runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
n
n
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
n
c
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
shiny::runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
?predict.lm
?predict.glm
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
shiny::runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
foo <- F_app_plot(mpg ~ hp * cyl, data = mtcars)
library(LittleApp2)
foo <- F_app_plot(mpg ~ hp * cyl, data = mtcars)
library(LittleApp2)
foo <- F_app_plot(mpg ~ hp * cyl, data = mtcars)
library(LittleApp2)
foo <- F_app_plot(mpg ~ hp * cyl, data = mtcars)
library(LittleApp2)
foo <- F_app_plot(mpg ~ hp * cyl, data = mtcars)
names(foo)
foo$P1
foo$P2
foo$P2$label
foo$P2$P
library(LittleApp2)
foo <- F_app_plot(mpg ~ hp * cyl, data = mtcars)
library(LittleApp2)
foo <- F_app_plot(mpg ~ hp * cyl, data = mtcars)
foo$main
foo$label
foo$side
foo$stats
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
explanatory_vars
runApp('inst/F')
n
formula
library(LittleApp2)
library(LittleApp2)
shiny::runApp('inst/F')
formula
nrow(data)
sd
R2
F
library(LittleApp2)
runApp('inst/F')
head(data)
formula
library(LittleApp2)
runApp('inst/F')
isTruthy(formula)
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
input$frame
req(model_formula())
library(LittleApp2)
runApp('inst/F')
nrow(data)
library(LittleApp2)
library(LittleApp2)
runApp('inst/F')
head(current_sample())
head(data)
model_formula()
head(data)
model_formula()
current_sample()
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
current_sample()
library(LittleApp2)
runApp('inst/F')
head(current_sample())
runApp('inst/F')
Q
library(LittleApp2)
?req
library(shiny)
?req
library(LittleApp2)
library(LittleApp2)
runApp()
current_sample()
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
library(LittleApp2)
readLines(system.file("data_services.R", package = "LittleApp2"))
runApp()
head(raw_data())
head(current_sample())
current_sample
shiny::runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
Q
runApp('inst/F')
names(input)
input$stratify
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
the_variables
current_variables()
head(raw_data[,1:3])
head(raw_data()[,1:3])
shiny::runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
formula
runApp('inst/F')
runApp('inst/F')
formula
library(LittleApp2)
shiny::runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
?icon
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
library(LittleApp2)
runApp('inst/F')
library(shiny)
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
?pmin
max(3,2)
min(3,2)
min(3,2, 1)
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp()
runApp('inst/F')
runApp('inst/F')
signif(pi,  3)
signif(10*pi, 3)
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
foo <- F_app_plot(mpg ~ hp, mtcars)
foo$stats
format_stats <- function(stats) {
# this doesn't need to be a reactive. It merely takes the <stats> output
# from the main calculation and formats it.
stats$F <- with(stats,  ((n-dflex)/dflex)*(R2/(1-R2)))
res <- with(stats, glue::glue("
<ul>
<li>n = {n}</li>\n\n
<li>dflex = {dflex}</li>\n\n
<li>var_raw = {signif(var_raw,4)}</li>\n\n
<li>nvar_model = {signif(var_model,4)}</li>\n\n
</ul>
<p>thus ...</p>\n\n
<ul>
<li>R-sq = {signif(R2, 3)}</li>\n\n
<li>F = {signif(F, 2)}</li>\n\n
</ul>"))
HTML(res)
}
format_stats(foo$stats)
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
shiny::runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
Rd_db("LittleApps")
tools::Rd_db("LittleApps")
tools::Rd_db("LittleApp2")
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
names(raw_data())
input$response
range(raw_data()[[input$response]])
range(raw_data()[[input$response]], na.rm  = TRUE)
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
help(package="shiny")
library(LittleApp2)
library(LittleApp2)
shiny::runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
library(LittleApp2)
shiny::runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
input$package
input$package
runApp()
runApp()
runApp()
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
class(inFile)
inFile
inFile$datapath
read.csv(inFile$datapath)
runApp('inst/F')
Sheet
runApp('inst/F')
names(Sheet)
Uploaded_data
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
head(Uploaded_data())
head(Uploaded_data())
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
the_variables
the_variables
the_variables
runApp('inst/F')
library(LittleApp2)
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
runApp('inst/F')
ggplot(aes(x=1,y=1)) + geom_text("No supplemental\n plot for t-test.")
ggplot(NULL, aes(x=1,y=1)) + geom_text("No supplemental\n plot for t-test.")
ggplot(mtcars, aes(x=1,y=1)) + geom_text("No supplemental\n plot for t-test.")
ggplot(mtcars, aes(x=1,y=1)) + geom_text(label="No supplemental\n plot for t-test.")
library(LittleApp2)
foo <- t_test_calcs(wage ~ 1, data  = mosaicData::CPS85)
library(LittleApp2)
foo <- t_test_calcs(wage ~ 1, data  = mosaicData::CPS85)
help(package = "LittleApp2")
library(LittleApp2)
foo <- t_test_calcs(wage ~ 1, data  = mosaicData::CPS85)
library(LittleApp2)
foo <- t_test_calcs(wage ~ 1, data  = mosaicData::CPS85)
foo <- t_test_calcs(wage ~ 1, data  = mosaicData::CPS85)
foo <- t_test_calcs(wage ~ 1, data  = mosaicData::CPS85)
formula
head(data)
df_stats(formula, data = data,  mn = mean
)
df_stats(formula, data = data,  mn = mean,
ci = ci.mean(level = !!level)) %>%
mutate(xpos = c(1.5))
level
df_stats(formula, data = data,  mn = mean,
ci = ci.mean(level = !!level)) %>%
mutate(xpos = c(1.25, 1.75))
df_stats(formula, data = data,  mn = mean,
ci = ci.mean(level = !!level))
library(LittleApp2)
foo <- t_test_calcs(wage ~ 1, data  = mosaicData::CPS85)
foo <- t_test_calcs(wage ~ 1, data  = mosaicData::CPS85)
formula
library(LittleApp2)
foo <- t_test_calcs(wage ~ 1, data  = mosaicData::CPS85)
library(LittleApp2)
foo <- t_test_calcs(wage ~ 1, data  = mosaicData::CPS85)
names(foo)
foo$main
foo$side
foo$stats
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
get_model_formula(mtcars, 1,
FALSE,
"lm")
get_model_formula(mtcars, 1,
FALSE,
"lm")
vars
get_model_formula(mtcars[1:2], 1,
FALSE,
"lm")
get_model_formula(mtcars[1], 1,
FALSE,
"lm")
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
library(LittleApp2)
runApp('inst/T')
runApp('inst/T')
formula
head(data)
y_range
Stats
show_mean
y_range
total_range
shiny::runApp('inst/T')
length(NULL)
library(LittleApp2)
runApp('inst/T')
runApp('inst/T')
runApp()
runApp('inst/T')
runApp('inst/T')
library(LittleApp2)
library(LittleApp2)
library(LittleApp2)
runApp('inst/T')
runApp('inst/T')
input$mu
runApp('inst/T')
Common$mu
library(LittleApp2)
library(LittleApp2)
shiny::runApp('inst/T')
library(LittleApp2)
library(LittleApp2)
runApp('inst/T')
library(LittleApp2)
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
runApp('inst/T')
