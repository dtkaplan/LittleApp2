# title = "Resample from the current sample rather than generating a new sample"
# ),
"  ",
span(
actionButton("show_explain",
label = NULL,
style = "simple",
color = "primary",
size  = "xs",
icon = icon("info")
),title = "Explain basic app controls."),
"  ",
span(
actionButton("show_metadata", "foobar",
label = NULL,
style = "simple",
color = "primary",
size = "xs",
icon = icon("user-secret")
), title = "Show codebook.")
"  ",
span(
actionBttn(
inputId = "bookmark",
label = "", #"bookmark"
icon = icon("bookmark"),
size = "xs"),
title = "Bookmark state of app"
)
)
span(
actionBttn(
inputId = "bookmark",
label = "", #"bookmark"
icon = icon("bookmark"),
size = "xs"),
title = "Bookmark state of app"
)
span(
actionButton("show_metadata", "foobar",
label = NULL,
style = "simple",
color = "primary",
size = "xs",
icon = icon("user-secret")
), title = "Show codebook.")
span(
actionButton("show_metadata",
label = NULL,
style = "simple",
color = "primary",
size = "xs",
icon = icon("user-secret")
), title = "Show codebook.")
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
shinyWidgetsGallery()
shiny::runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Center_spread')
runApp('inst/Center_spread')
runApp('inst/Center_spread')
library(LittleApp2)
runApp('inst/Center_spread')
library(LittleApp2)
runApp('inst/Center_spread')
tags$link
?a
library(LittleApp2)
runApp('inst/Center_spread')
library(LittleApp2)
runApp('inst/Center_spread')
library(LittleApp2)
runApp('inst/Center_spread')
runApp()
runApp()
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
source('~/KaplanFiles/Packages/LittleApp2/inst/data_services.R')
library(LittleApp2)
runApp()
runApp()
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
explanatory_name()
head(Raw_data[[explanatory_name]])
head(Raw_data[[explanatory_name()]])
is.numeric(Raw_data[[explanatory_name()]])
is.numeric(Raw_data[explanatory_name()])
library(LittleApp2)
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
library(LittleApp2)
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
runApp()
runApp('~/KaplanFiles/Packages/LittleApp2/inst/F')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Densities')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Densities')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
resp_range
null_value_memory()
null_value_memory(0.5)
resp_range
sliderInput("mu", "Null hypothesis value", min  = resp_range[1],
max = resp_range[2], value = null_value_memory())
?sliderInput
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
shinyWidgetsGallery()
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
resp_range
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
resp_range()
resp_range
?numericInput
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
null_hypothesis
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/T')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/F')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/F')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/F')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/F')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/F')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/F')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Densities')
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Densities')
runApp()
runApp()
runApp()
runApp()
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
runApp()
library(LittleApp2)
runApp()
library(LittleApp2)
runApp()
runApp()
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
?miniTabstripPanel
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
library(LittleApp2)
runApp('~/KaplanFiles/Packages/LittleApp2/inst/Stratify')
library(LittleApp2)
shiny::runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
Stats_tab
library(LittleApp2)
runApp('inst/Stratify')
tagList(p("one"), p("two"))
library(LittleApp2)
runApp('inst/Stratify')
HTML(tagList(p("one"), p("two")))
html(tagList(p("one"), p("two")))
html(p("one"), p("two"))
?html
?HTML
HTML(p("one"), p("two"))
as.character(p("one"))
HTML(as.character(p("one")))
HTML(as.character(p("one")), as.character(p("two")))
library(LittleApp2)
runApp('inst/Stratify')
Data_tab
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
?miniContentPanel
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
shiny::runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
?miniTabstripPanel
library(LittleApp2)
runApp('inst/Stratify')
miniTabstripPanel
?buildTabset
miniUI:::builtTabset
miniUI:::buildTabset
library(LittleApp2)
runApp('inst/Stratify')
??gadgetDependencies
miniUI:::gadgetDependencies
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
runApp('inst/Stratify')
?textOutput
library(LittleApp2)
runApp('inst/Stratify')
library(LittleApp2)
runApp('inst/Stratify')
runApp('inst/T')
runApp('inst/F')
runApp('inst/Bootstrap')
runApp('inst/Center_spread')
runApp('inst/Densities')
remotes::install_github("dtkaplan/LittleApp2")
r icon("info")
icon("info")
?icon
runApp('inst/Bootstrap')
runApp('inst/Center_spread')
runApp('inst/Center_spread')
runApp('inst/Center_spread')
runApp('inst/Center_spread')
knitr::include_graphics("images/center-spread-example.png")
knitr::include_graphics("images/t-test-example.png")
knitr::include_graphics("images/t-test-example.png")
knitr::include_graphics("images/density-example.png.png")
knitr::include_graphics("images/density-example.png")
runApp('inst/Stratify')
knitr::include_graphics("images/stratification-sat.png")
shiny::runApp('inst/Regression')
runApp('inst/Regression')
remotes::install_github("dtkaplan/LittleApp2")
runApp('inst/T')
runApp('inst/Center_spread')
runApp('inst/Densities')
runApp('inst/Stratify')
runApp('inst/Bootstrap')
runApp('inst/Bootstrap')
library(LittleApp2)
get_app_info()
get_app_info()
library(LittleApp2)
get_app_info()
library(LittleApp2)
library(LittleApp2)
get_app_info()
library(LittleApp2)
get_app_info()
get_app_info()
get_app_info()
debug("get_app_info")
get_app_info()
library(LittleApp2)
get_app_info()
get_app_info() -> foo
foo$name
shiny::runApp('inst/Densities')
runApp('inst/Densities')
?brushOpts
?plotOutput
runApp('inst/Densities')
runApp('inst/Densities')
runApp()
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
library(LittleApp2)
runApp('inst/Densities')
runApp('inst/Stratify')
runApp('inst/Stratify')
?theme_light
runApp('inst/Stratify')
theme_light
runApp('inst/Stratify')
runApp('inst/Stratify')
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
runApp('inst/Densities')
is.null(numeric(0))
length(numeric(0))
runApp('inst/Densities')
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
?truthy
??truthy
library(LittleApp2)
runApp('inst/Regression')
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
runApp('inst/Densities')
runApp('inst/Center_spread')
library(mosaicData)
class(Gestation$gestation)
is.numeric(Gestation$gestation)
class(1.3 + Gestation$gestation)
inherits(Gestation$gestation, "numeric")
inherits(Gestation$gestation, "numeric", "integer")
inherits(Gestation$gestation, c("numeric", "integer"))
runApp('inst/Center_spread')
is.integer(7L)
library(LittleApp2)
runApp('inst/Center_spread')
runApp('inst/Center_spread')
runApp('inst/Center_spread')
is.factor(Gestation$gestation)
is.integer(Gestation$gestation)
is.integer(Gestation$marital)
is.factor(Gestation$marital)
head(Gestation$marital)
is.numeric(Gestation$marital)
is.numeric(Gestation$gestation)
runApp('inst/Center_spread')
runApp('inst/Center_spread')
runApp('inst/Center_spread')
runApp('inst/Center_spread')
runApp('inst/Center_spread')
runApp('inst/Center_spread')
remotes::install_github("dtkaplan/LittleApp2")
library(LittleApp2)
library(mosaicData)
View(Cards)
shiny::runApp('inst/Regression')
class(mosaicData$Cards)
class(mosaicData::Cards)
as.data.frame(c(1:3))
head(as.data.frame(Cards))
head(as.data.frame(mosaicData::Cards))
head(as.tibble(mosaicData::Cards))
head(as_tibble(mosaicData::Cards))
library(tibble)
head(as_tibble(mosaicData::Cards))
library(LittleApp2)
runApp('inst/Regression')
library(openintro)
View(mlbBat10)
head(row.names(mlbBat10))
shiny::runApp('inst/Regression')
library(LittleApp2)
lapply(Natality_2014, class)
Natality_2014$sex <- as.character(Natality_2014$sex)
Natality_2014$dplural <- as.character(Natality_2014$dplural)
save(Natality_2014, file = "data/Natality_2014.rda")
library(LittleApp2)
runApp('inst/Regression')
remotes::install_github("dtkaplan/LittleApp2")
library(mosaicCalc)
help(package = "mosaicCalc")
shiny::runApp('inst/Regression')
library(shiny)
?data_upload
?textInput
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
grepl("[csv|rda]$", "myfile.")
grepl("[csv|rda]$", "myfile.csv")
grepl("\\.[csv|rda]$", "myfile.csv")
grepl("\.[csv|rda]$", "myfile.csv")
grepl("\\\\.[csv|rda]$", "myfile.csv")
grepl(".[csv|rda]$", "myfile.csv")
grepl("[.][csv|rda]$", "myfile.csv")
grepl("myfile.[csv|rda]$", "myfile.csv")
grepl("myfile.?[csv|rda]$", "myfile.csv")
grepl(".?[csv|rda]$", "myfile.csv")
grepl("\\.[csv|rda]$", "myfile.csv")
grepl(".*[csv|rda]$", "myfile.csv")
grepl("\\.[csv|rda]$", "myfile.csv")
grepl("\\.", ".")
grepl("\\.", "hello.")
grepl("\\.", "hello.csv")
grepl("\\.csv$", "hello.csv")
grepl("\\.[csv|rda]$", "myfile.csv")
grepl("\\.csv$", "myfile.csv")
grepl("\\.(csv|rda)$", "myfile.csv")
grepl("\\.(csv|rda)$", "myfilecsv")
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
paste(NULL, "Hello")
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
library(LittleApp2)
runApp('inst/Regression')
library(LittleApp2)
shiny::runApp('inst/Regression')
runApp('inst/Regression')
library(LittleApp2)
shiny::runApp('inst/Regression')
runApp('inst/Regression')
runApp('inst/Densities')
library(LittleApp2)
data(package = "LittleApp2")
library(dplyr)
NHANES2 %>% select(income_poverty, home_type) -> foo
lapply(foo, class)
goo <- head(foo, 50)
goo$home_type <- shuffle(goo$home_type)
library(mosaic)
goo$home_type <- shuffle(goo$home_type)
View(goo)
goo$home_type <- shuffle(goo$home_type)
View(goo)
